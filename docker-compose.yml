networks:
  traefik:
    external: true
    name: traefik
  internal:
    driver: bridge

services:
  traefik:
    image: traefik:${TRAEFIK_IMAGE_TAG:-v3.0}
    container_name: ${TRAEFIK_CONTAINER_NAME:-traefik}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    command:
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--accesslog=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik"
      - "--providers.file.directory=/etc/traefik"
      - "--providers.file.watch=true"
    ports:
      - "${TRAFIK_HTTP_PORT:-80}:80"
      - "${TRAFIK_HTTPS_PORT:-443}:443"
    networks:
      - traefik
    environment:
      - "CF_DNS_API_TOKEN_FILE=/run/secrets/cf_api_token"
    secrets:  
      - cf_api_token
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/middlewares.yml:/etc/traefik/middlewares.yml:ro # <-- THE ONLY CORRECTION NEEDED
      - ${TRAFIK_LETSENCRYPT_PATH:-./letsencrypt}:/letsencrypt
    labels:
      - "traefik.enable=true"
    #  - "traefik.http.routers.traefik-dashboard.rule=Host(`${TRAFIK_HOSTNAME}`)"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik2-dashboard.piconicktech1919.dpdns.org`)"  
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

  # --- Oauth2-proxy and n8n services remain unchanged. Leave them as they are. ---
  oauth2-proxy:
    image: ${OAUTH2_PROXY_IMAGE}
    container_name: ${OAUTH2_PROXY_CONTAINER_NAME}
    restart: unless-stopped
    networks:
      - traefik
      - internal
    volumes:
      - ./${OAUTH2_PROXY_CONFIG}:/etc/oauth2-proxy.cfg
    command: --config /etc/oauth2-proxy.cfg
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oauth.rule=Host(`${OAUTH2_PROXY_HOSTNAME}`)"
      - "traefik.http.routers.oauth.entrypoints=websecure"
      - "traefik.http.routers.oauth.tls.certresolver=letsencrypt"
      - "traefik.http.services.oauth.loadbalancer.server.port=4180"
      - "traefik.docker.network=traefik"

  n8n:
    image: ${N8N_IMAGE}
    container_name: ${N8N_CONTAINER_NAME}
    restart: unless-stopped
    networks:
      - traefik
      - internal
    environment:
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - DB_TYPE=${DB_TYPE}
      - DB_SQLITE_DATABASE=${DB_SQLITE_DATABASE}
      - N8N_SECURE_COOKIE=true
      - N8N_BASIC_AUTH_ACTIVE=false
      - EXECUTIONS_PROCESS=main
      - EXECUTIONS_DATA_SAVE_ON_ERROR=all
      - EXECUTIONS_DATA_SAVE_ON_SUCCESS=none
      - N8N_DISABLE_UI=false
      - GENERIC_TIMEZONE=${TZ}
      - N8N_EDITOR_BASE_URL=https://${N8N_HOSTNAME}
    volumes:
      - n8n_data:/home/node/.n8n
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`${N8N_HOSTNAME}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
      - "traefik.http.services.n8n.loadbalancer.server.port=${N8N_PORT}"
      - "traefik.http.routers.n8n.middlewares=n8n-auth@file,secure-headers@file"
      - "traefik.docker.network=traefik"

volumes:
  n8n_data:
    driver: local

secrets:
  cf_api_token:
    file: ./secrets/cf_api_token

