# ./docker-compose.yml

networks:
  traefik:
    external: true
    name: traefik
  internal:
    driver: bridge

services:
  traefik:
    image: traefik:${TRAEFIK_IMAGE_TAG:-v3.0}
    container_name: ${TRAEFIK_CONTAINER_NAME:-traefik}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "${TRAFIK_HTTP_PORT:-80}:80"
      - "${TRAFIK_HTTPS_PORT:-443}:443"
    networks:
      - traefik
    environment:
      # This variable is substituted into traefik.yml by Docker Compose on start
      #- TRAEFIK_LETSENCRYPT_EMAIL=${TRAEFIK_LETSENCRYPT_EMAIL}
      - TRAEFIK_LETSENCRYPT_EMAIL=asmhasming12345@gmail.com
      # Cloudflare secret is passed via environment to be read from the secret file
      - "CF_DNS_API_TOKEN_FILE=/run/secrets/cf_api_token"
    secrets:
      - cf_api_token
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Main static configuration file
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      # Dynamic configuration file for middlewares
      - ./traefik/middlewares.yml:/etc/traefik/config/middlewares.yml:ro
      - ${TRAFIK_LETSENCRYPT_PATH:-./letsencrypt}:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik2-dashboard.piconicktech1919.dpdns.org`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

  oauth2-proxy:
    image: ${OAUTH2_PROXY_IMAGE}
    container_name: ${OAUTH2_PROXY_CONTAINER_NAME}
    restart: unless-stopped
    networks:
      - traefik
      - internal
    volumes:
      - ./${OAUTH2_PROXY_CONFIG}:/etc/oauth2-proxy.cfg
    command: --config=/etc/oauth2-proxy.cfg --show-debug-on-error --whitelist-domain=".piconicktech1919.dpdns.org"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oauth.rule=Host(`auth.piconicktech1919.dpdns.org`)"
      - "traefik.http.routers.oauth.entrypoints=websecure"
      - "traefik.http.routers.oauth.tls.certresolver=letsencrypt"
      - "traefik.http.services.oauth.loadbalancer.server.port=4180"
      - "traefik.docker.network=traefik"

  n8n:
    image: ${N8N_IMAGE}
    container_name: ${N8N_CONTAINER_NAME}
    restart: unless-stopped
    networks:
      - traefik
      - internal
    environment:
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - DB_TYPE=${DB_TYPE}
      - DB_SQLITE_DATABASE=${DB_SQLITE_DATABASE}
      - N8N_SECURE_COOKIE=true
      - N8N_BASIC_AUTH_ACTIVE=false
      - EXECUTIONS_PROCESS=main
      - EXECUTIONS_DATA_SAVE_ON_ERROR=all
      - EXECUTIONS_DATA_SAVE_ON_SUCCESS=none
      - N8N_DISABLE_UI=false
      - GENERIC_TIMEZONE=${TZ}
      - N8N_EDITOR_BASE_URL=https://${N8N_HOSTNAME}
    volumes:
      - n8n_data:/home/node/.n8n
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.piconicktech1919.dpdns.org`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "traefik.http.routers.n8n.middlewares=n8n-chain@file"
      - "traefik.docker.network=traefik"

volumes:
  n8n_data:
    driver: local

secrets:
  cf_api_token:
    file: ./secrets/cf_api_token

